# Generated by Django 5.2.6 on 2025-09-17 02:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DRP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(14)], verbose_name='Numero do DRP')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Regioes')),
            ],
            options={
                'verbose_name': 'DRP',
                'verbose_name_plural': 'DRPs',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='Eixo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Eixo',
                'verbose_name_plural': 'Eixos',
            },
        ),
        migrations.CreateModel(
            name='ProjetoIntegrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Numero do Projeto Integrador')),
            ],
            options={
                'verbose_name': 'Projeto Integrador',
                'verbose_name_plural': 'Projetos Integradores',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True)),
                ('eixo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cursos', to='core.eixo')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Polo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('drp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='polos', to='core.drp')),
            ],
            options={
                'verbose_name': 'Polo',
                'verbose_name_plural': 'Polos',
            },
        ),
        migrations.CreateModel(
            name='ProjectGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nome Do Grupo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descricao do Grupo')),
                ('join_policy', models.CharField(choices=[('OPEN', 'Aberto'), ('MODERATE', 'Moderado')], default='MODERATE', max_length=20, verbose_name='Politica de entrada')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to=settings.AUTH_USER_MODEL)),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='core.curso')),
                ('drp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='core.drp')),
                ('eixo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='core.eixo')),
                ('polo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='core.polo')),
                ('projeto_integrador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='core.projetointegrador')),
            ],
            options={
                'verbose_name': 'Grupo de PI',
                'verbose_name_plural': 'Grupos de PI',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('MEMBER', 'Membro'), ('ADMIN', 'Admin')], default='MEMBER', max_length=10)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to=settings.AUTH_USER_MODEL)),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='core.projectgroup')),
            ],
            options={
                'verbose_name': 'Vinculo de Membro',
                'verbose_name_plural': 'Vinculo de Membros',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alunos', to='core.curso')),
                ('polo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alunos', to='core.polo')),
                ('projeto_integrador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alunos', to='core.projetointegrador')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile de Usuario',
                'verbose_name_plural': 'Profiles de Usuarios',
            },
        ),
        migrations.CreateModel(
            name='UserTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tags')),
            ],
            options={
                'verbose_name': 'Tags do usuario',
                'verbose_name_plural': 'Tags dos usuarios',
                'unique_together': {('profile', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='tags',
            field=models.ManyToManyField(related_name='profiles', through='core.UserTags', to='core.tags'),
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_requested', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejetado')], default='PENDING', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to=settings.AUTH_USER_MODEL)),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='core.projectgroup')),
            ],
            options={
                'verbose_name': 'Pedido de entrada',
                'verbose_name_plural': 'Pedidos de entrada',
                'unique_together': {('user', 'project_group')},
            },
        ),
        migrations.CreateModel(
            name='ProjectGroupTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.projectgroup')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tags')),
            ],
            options={
                'verbose_name': 'Tags do grupo',
                'verbose_name_plural': 'Tags dos grupos',
                'unique_together': {('project_group', 'tag')},
            },
        ),
    ]
