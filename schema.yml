openapi: 3.0.3
info:
  title: GruPI - API de Grupos de Projeto
  version: 1.0.0
  description: "API para plataforma de formação de grupos de projeto acadêmico da\
    \ UNIVESP.\n    \nPermite que usuários se cadastrem, criem perfis, encontrem grupos\
    \ compatíveis \ncom base em critérios acadêmicos (Polo, DRP, Curso, Eixo, PI)\
    \ e gerenciem \nsua participação em grupos de projeto.\n\n**Recursos principais:**\n\
    - Autenticação via JWT (dj-rest-auth)\n- Gestão de perfil de usuário com tags\
    \ de habilidades\n- Criação e gerenciamento de grupos de projeto\n- Sistema de\
    \ membros com roles (ADMIN/MEMBER)\n- Dados acadêmicos (Eixos, Cursos, DRPs, Polos,\
    \ PIs)"
  contact:
    name: Equipe de Desenvolvimento GruPI
    email: dev-grupi@pavops.net
paths:
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/:
    post:
      operationId: auth_registration_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/auth/registration/resend-email/:
    post:
      operationId: auth_registration_resend_email_create
      description: |-
        Resends another email to an unverified email.

        Accepts the following POST parameter: email.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/verify-email/:
    post:
      operationId: auth_registration_verify_email_create
      description: |-
        Verifies the email associated with the provided key.

        Accepts the following POST parameter: key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/user/:
    get:
      operationId: auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    put:
      operationId: auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserDetailsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
    patch:
      operationId: auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserDetailsRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
          description: ''
  /api/v1/cursos/:
    get:
      operationId: cursos_list
      description: Retorna lista de todos os cursos com seus eixos.
      summary: Listar cursos
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curso'
          description: ''
  /api/v1/drps/:
    get:
      operationId: drps_list
      description: Retorna lista de todas as Diretorias Regionais de Polo (DRP 1-14).
      summary: Listar DRPs
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DRP'
          description: ''
  /api/v1/eixos/:
    get:
      operationId: eixos_list
      description: Retorna lista de todos os eixos acadêmicos disponíveis.
      summary: Listar eixos
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Eixo'
          description: ''
  /api/v1/join-requests/:
    get:
      operationId: join_requests_list
      description: |-
        Retorna todos os pedidos de entrada pendentes para o grupo do usuário autenticado.

        **Permissões:** Apenas admins de grupos podem ver pedidos
      summary: Listar pedidos de entrada do grupo
      parameters:
      - in: path
        name: group_pk
        schema:
          type: integer
        description: ID do grupo
        required: true
      tags:
      - Pedidos de Entrada
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JoinRequest'
          description: ''
        '403':
          description: Usuário não é admin de nenhum grupo
  /api/v1/join-requests/{id}/approve/:
    post:
      operationId: join_requests_approve_create
      description: |-
        Aprova um pedido de entrada, adicionando o usuário ao grupo.

        **Permissões:** Apenas o admin do grupo pode aprovar
      summary: Aprovar pedido de entrada
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: request_pk
        schema:
          type: integer
        description: ID do pedido de entrada
        required: true
      tags:
      - Pedidos de Entrada
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Pedido aprovado com sucesso
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Pedido já foi processado ou usuário já está em grupo
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Sem permissão para aprovar este pedido
        '404':
          description: Pedido não encontrado
  /api/v1/join-requests/{id}/reject/:
    post:
      operationId: join_requests_reject_create
      description: |-
        Rejeita um pedido de entrada.

        **Permissões:** Apenas o admin do grupo pode rejeitar
      summary: Rejeitar pedido de entrada
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: request_pk
        schema:
          type: integer
        description: ID do pedido de entrada
        required: true
      tags:
      - Pedidos de Entrada
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Pedido rejeitado com sucesso
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Pedido já foi processado
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Sem permissão para rejeitar este pedido
        '404':
          description: Pedido não encontrado
  /api/v1/join-requests/me/:
    get:
      operationId: join_requests_me_list
      description: Retorna todos os pedidos de entrada do usuário autenticado.
      summary: Obter pedidos de entrada próprios
      tags:
      - Pedidos de Entrada
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JoinRequest'
          description: ''
        '404':
          description: Usuário não tem pedidos de entrada
  /api/v1/leave-group/:
    post:
      operationId: leave_group_create
      description: |-
        Remove o usuário autenticado do grupo atual.

        **Validações:**
        - Usuário deve fazer parte de um grupo
        - Admin/criador não pode sair (deve deletar o grupo)
      summary: Sair do grupo
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '204':
          description: Saiu do grupo com sucesso
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Usuário não faz parte de nenhum grupo
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Admin não pode sair do grupo
  /api/v1/pis/:
    get:
      operationId: pis_list
      description: Retorna lista de Projetos Integradores (PI 1-6).
      summary: Listar Projetos Integradores
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjetoIntegrador'
          description: ''
  /api/v1/polos/:
    get:
      operationId: polos_list
      description: Retorna lista de todos os polos presenciais com suas DRPs.
      summary: Listar polos
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Polo'
          description: ''
  /api/v1/profiles/{user_pk}/:
    get:
      operationId: profiles_retrieve
      description: Retorna o perfil de um usuário específico pelo ID.
      summary: Obter perfil de outro usuário
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
        description: UUID do usuário
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Perfil de Usuário
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
        '404':
          description: Usuário não encontrado
  /api/v1/profiles/me/:
    get:
      operationId: profiles_me_retrieve
      description: Retorna o perfil completo do usuário autenticado.
      summary: Obter perfil próprio
      tags:
      - Perfil de Usuário
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
    patch:
      operationId: profiles_me_partial_update
      description: Atualiza polo, curso, PI e tags do perfil do usuário.
      summary: Atualizar perfil próprio
      tags:
      - Perfil de Usuário
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
        '400':
          description: Dados inválidos
  /api/v1/profiles/me/tags/:
    get:
      operationId: profiles_me_tags_list
      description: Retorna todas as tags associadas ao perfil do usuário autenticado.
      summary: Listar tags do usuário
      tags:
      - Perfil de Usuário
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
  /api/v1/project-groups/:
    get:
      operationId: project_groups_list
      description: Retorna lista de todos os grupos de projeto.
      summary: Listar grupos de projeto
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectGroup'
          description: ''
    post:
      operationId: project_groups_create
      description: |-
        Cria um novo grupo de projeto. O usuário autenticado será o criador e admin do grupo. Informações acadêmicas (PI, DRP, Polo, Eixo, Curso) são herdadas automaticamente do perfil do criador.

        **Validações:**
        - Usuário não pode estar em outro grupo
        - Máximo de 5 tags por grupo
      summary: Criar grupo de projeto
      tags:
      - Grupos de Projeto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectGroupRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
          description: ''
        '400':
          description: Erro de validação (usuário já em grupo, etc)
  /api/v1/project-groups/{group_pk}/members/:
    get:
      operationId: project_groups_members_list
      description: Retorna lista de membros do grupo com seus IDs de usuário e roles.
      summary: Listar membros do grupo
      parameters:
      - in: path
        name: group_pk
        schema:
          type: integer
        description: ID do grupo
        required: true
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MembershipUserId'
          description: ''
        '404':
          description: Grupo não encontrado
  /api/v1/project-groups/{group_pk}/members/{user_pk}/:
    delete:
      operationId: project_groups_members_destroy
      description: |-
        Remove um membro específico do grupo.

        **Permissões:**
        - Admin do grupo pode remover qualquer membro
        - Membro pode se remover (auto-remoção)
      summary: Remover membro do grupo
      parameters:
      - in: path
        name: group_pk
        schema:
          type: integer
        description: ID do grupo
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          format: uuid
        description: UUID do usuário a ser removido
        required: true
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '204':
          description: Membro removido com sucesso
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Sem permissão para remover este membro
        '404':
          description: Grupo, usuário ou membership não encontrado
  /api/v1/project-groups/{id}/:
    get:
      operationId: project_groups_retrieve
      description: Retorna informações completas de um grupo específico.
      summary: Obter detalhes de um grupo
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
          description: ''
        '404':
          description: Grupo não encontrado
    patch:
      operationId: project_groups_partial_update
      description: |-
        Atualiza nome, descrição e tags do grupo.

        **Permissões:** Apenas o admin do grupo pode atualizar
      summary: Atualizar grupo
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Projeto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectGroupUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectGroupUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectGroupUpdateRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
          description: ''
        '400':
          description: Dados inválidos
        '403':
          description: Sem permissão (não é admin do grupo)
        '404':
          description: Grupo não encontrado
    delete:
      operationId: project_groups_destroy
      description: |-
        Remove o grupo de projeto.

        **Permissões:** Apenas o admin do grupo pode deletar
      summary: Deletar grupo
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '204':
          description: Grupo deletado com sucesso
        '403':
          description: Sem permissão (não é admin do grupo)
        '404':
          description: Grupo não encontrado
  /api/v1/project-groups/{id}/join/:
    post:
      operationId: project_groups_join_create
      description: |-
        Permite que um usuário solicite entrada em um grupo de projeto.

        **Comportamento:**
        - Se o grupo não for moderado, o usuário entra imediatamente
        - Se o grupo for moderado, cria um pedido de entrada pendente

        **Validações:**
        - Usuário não pode estar em outro grupo
        - Grupo deve existir e estar ativo
      summary: Solicitar entrada em grupo
      parameters:
      - in: path
        name: group_pk
        schema:
          type: integer
        description: ID do grupo
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Entrou no grupo com sucesso (grupo não moderado)
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Pedido de entrada criado (grupo moderado)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Usuário já está em um grupo ou já tem pedido pendente
        '404':
          description: Grupo não encontrado
  /api/v1/project-groups/me/:
    get:
      operationId: project_groups_me_retrieve
      description: Retorna o grupo de projeto do qual o usuário faz parte.
      summary: Obter grupo do usuário
      tags:
      - Grupos de Projeto
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
          description: ''
        '404':
          description: Usuário não faz parte de nenhum grupo
  /api/v1/tags/:
    get:
      operationId: tags_list
      description: Retorna lista de todas as tags de habilidades/interesses disponíveis.
      summary: Listar tags
      tags:
      - Dados Acadêmicos
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
components:
  schemas:
    Curso:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 150
        eixo:
          allOf:
          - $ref: '#/components/schemas/Eixo'
          readOnly: true
      required:
      - eixo
      - id
      - nome
    CustomRegisterRequest:
      type: object
      description: |-
        Serializer personalizado para o registro de usuários, incluindo
        os campos obrigatórios do UserProfile.
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
        projeto_integrador:
          type: integer
          writeOnly: true
        drp:
          type: integer
          writeOnly: true
        polo:
          type: integer
          writeOnly: true
        curso:
          type: integer
          writeOnly: true
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - curso
      - drp
      - email
      - first_name
      - last_name
      - password1
      - password2
      - polo
      - projeto_integrador
    CustomUser:
      type: object
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
          title: Id
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
    CustomUserDetails:
      type: object
      description: |-
        Serializer para o endpoint /api/auth/user/.
        Define quais campos do usuário são retornados.
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
          title: Id
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
      required:
      - email
      - pk
      - profile
    CustomUserDetailsRequest:
      type: object
      description: |-
        Serializer para o endpoint /api/auth/user/.
        Define quais campos do usuário são retornados.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
    DRP:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        numero:
          type: integer
          maximum: 14
          minimum: 1
          title: Numero do DRP
      required:
      - id
      - numero
    Eixo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
      required:
      - id
      - nome
    JoinRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          format: email
          title: Email address
          readOnly: true
        project_group:
          type: string
          title: Nome Do Grupo
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        date_requested:
          type: string
          format: date
          readOnly: true
      required:
      - date_requested
      - id
      - project_group
      - user
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    Membership:
      type: object
      properties:
        user:
          type: string
          format: email
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - user
    MembershipRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
    MembershipUserId:
      type: object
      properties:
        user:
          type: string
          format: email
          title: Email address
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - user
    MessageResponse:
      type: object
      description: Serializer para respostas de mensagem simples com uma chave 'detail'.
      properties:
        detail:
          type: string
      required:
      - detail
    PasswordChangeRequest:
      type: object
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedCustomUserDetailsRequest:
      type: object
      description: |-
        Serializer para o endpoint /api/auth/user/.
        Define quais campos do usuário são retornados.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedProjectGroupUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Nome Do Grupo
          maxLength: 150
        description:
          type: string
          nullable: true
          title: Descricao do Grupo
        tags:
          type: array
          items:
            type: integer
    PatchedUserProfileUpdateRequest:
      type: object
      properties:
        polo:
          type: integer
        curso:
          type: integer
        projeto_integrador:
          type: integer
        tags:
          type: array
          items:
            type: integer
    Polo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        drp:
          allOf:
          - $ref: '#/components/schemas/DRP'
          readOnly: true
      required:
      - drp
      - id
      - nome
    ProjectGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nome Do Grupo
          maxLength: 150
        description:
          type: string
          nullable: true
          title: Descricao do Grupo
        creator:
          type: string
          format: email
          title: Email address
          readOnly: true
        projeto_integrador:
          type: string
          readOnly: true
        drp:
          type: string
          readOnly: true
        polo:
          type: string
          readOnly: true
        eixo:
          type: string
          readOnly: true
        curso:
          type: string
          readOnly: true
        moderated:
          type: boolean
          title: Moderado
        tags:
          type: array
          items:
            type: integer
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
      required:
      - creator
      - curso
      - drp
      - eixo
      - id
      - memberships
      - name
      - polo
      - projeto_integrador
      - tags
    ProjectGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Nome Do Grupo
          maxLength: 150
        description:
          type: string
          nullable: true
          title: Descricao do Grupo
        moderated:
          type: boolean
          title: Moderado
        tags:
          type: array
          items:
            type: integer
      required:
      - name
      - tags
    ProjetoIntegrador:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        numero:
          type: integer
          maximum: 6
          minimum: 1
          title: Numero do Projeto Integrador
      required:
      - id
      - numero
    ResendEmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    RoleEnum:
      enum:
      - MEMBER
      - ADMIN
      type: string
      description: |-
        * `MEMBER` - Membro
        * `ADMIN` - Admin
    StatusEnum:
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      type: string
      description: |-
        * `PENDING` - Pendente
        * `APPROVED` - Aprovado
        * `REJECTED` - Rejetado
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    UserProfile:
      type: object
      description: |-
        Serializer para exibir os detalhes do perfil do usuário.
        Usa StringRelatedField para mostrar os nomes em vez dos IDs.
      properties:
        polo:
          type: string
          readOnly: true
        curso:
          type: string
          readOnly: true
        projeto_integrador:
          type: string
          readOnly: true
        eixo:
          type: string
          readOnly: true
        drp:
          type: string
          readOnly: true
      required:
      - curso
      - drp
      - eixo
      - polo
      - projeto_integrador
    UserProfileDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        polo:
          type: string
          readOnly: true
        curso:
          type: string
          readOnly: true
        projeto_integrador:
          type: string
          readOnly: true
        eixo:
          type: string
          readOnly: true
        drp:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
      required:
      - curso
      - drp
      - eixo
      - id
      - polo
      - projeto_integrador
      - tags
      - user
    VerifyEmailRequest:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - key
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: http://127.0.0.1:8000
  description: Servidor de Desenvolvimento Local
- url: https://api.grupi-dev.pavops.net
  description: Servidor de Desenvolvimento
- url: https://api.grupi.pavops.net
  description: Servidor de Produção
